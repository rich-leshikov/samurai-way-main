{"version":3,"file":"static/js/907.931f7818.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","webpack://samurai-way/./src/components/common/FormControls/FormControls.module.css?7a3d","components/common/FormControls/FormControls.tsx","components/common/MessageForm/MessageForm.module.css","components/common/MessageForm/MessageForm.tsx","hoc/withAuthRedirect.tsx","utils/validators/index.ts","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__xNJNh\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__8URru\",\"profile__wallpaper\":\"ProfileInfo_profile__wallpaper__cfdA5\",\"profile__description\":\"ProfileInfo_profile__description__m4Ak1\",\"profile__description__avatar\":\"ProfileInfo_profile__description__avatar__0TNgY\",\"profile__description__info\":\"ProfileInfo_profile__description__info__6nuYX\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileStatus\":\"ProfileStatus_profileStatus__S11lX\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './ProfileStatus.module.css'\r\nimport {ThunkType} from '../../../../redux/redux-store';\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n  status: string\r\n  changeStatus: (status: string) => ThunkType\r\n}\r\n\r\n\r\nexport const ProfileStatus = (props: ProfileStatusPropsType) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const [status, changeStatus] = useState<string>(props.status)\r\n\r\n  useEffect(() => {\r\n    changeStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => setEditMode(true)\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.changeStatus(status)\r\n  }\r\n  const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => changeStatus(e.currentTarget.value)\r\n\r\n  return (\r\n    <div className={s.profileStatus}>\r\n      {\r\n        !editMode && <p onDoubleClick={activateEditMode}>{status}</p>\r\n      }\r\n      {\r\n        editMode &&\r\n        <input\r\n          autoFocus={true}\r\n          onChange={(e) => onStatusChange(e)}\r\n          onBlur={deactivateEditMode}\r\n          value={status}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {ThunkType} from '../../../redux/redux-store';\r\nimport {ProfileStatus} from './ProfileStatus/ProfileStatus';\r\n\r\ntype ProfileInfoPropsType = {\r\n  profile: any\r\n  status: string\r\n  changeStatus: (status: string) => ThunkType\r\n}\r\n\r\nexport function ProfileInfo(props: ProfileInfoPropsType) {\r\n  return (\r\n    <div className={s.profileInfo}>\r\n      {/*<div className={s.profile__wallpaper}>*/}\r\n      {/*  <img src={require('../../../assets/img/venice_rooftops.jpg')} alt=\"main-img\"/>*/}\r\n      {/*</div>*/}\r\n      <div className={s.profile__description}>\r\n        <div className={s.profile__description__avatar}>\r\n          <img src={props.profile.photos.small ?\r\n            props.profile.photos.small :\r\n            require('../../../assets/img/no_data_avatar.png')} alt={'avatar'}/>\r\n        </div>\r\n        <div className={s.profile__description__info}>\r\n          <h4>Thinking about</h4>\r\n          <ProfileStatus\r\n            status={props.status}\r\n            changeStatus={props.changeStatus}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile__posts\":\"MyPosts_profile__posts__urzsr\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile__post\":\"Post_profile__post__sdmpD\",\"avatar\":\"Post_avatar__2MnBk\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n  message: string\r\n  likesCount: number\r\n  profile: any\r\n}\r\n\r\nexport function Post(props: PostPropsType) {\r\n  return (\r\n    <div className={s.profile__post}>\r\n      <img className={s.avatar} src={props.profile.photos.small ?\r\n        props.profile.photos.small : require(\"../../../../assets/img/no_data_avatar.png\")} alt='no_data'/>\r\n      <p>{props.message}</p>\r\n      <div className=\"\">\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from './Post/Post';\r\nimport {MessageDataType, MessageReduxForm} from '../../common/MessageForm/MessageForm';\r\nimport {PostType} from '../../../redux/profile-reducer';\r\n\r\n\r\nexport type MyPostsPropsType = {\r\n  posts: Array<PostType>\r\n  profile: any\r\n  addPost: (postText: string) => void\r\n}\r\n\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n  const addPost = (formData: MessageDataType) => props.addPost(formData.message)\r\n\r\n  return (\r\n    <div className={s.profile__posts}>\r\n      <h3>My posts</h3>\r\n      <div className=\"profile__new-post\">\r\n        <MessageReduxForm onSubmit={addPost}/>\r\n      </div>\r\n      <div className=\"profile__posts-feed\">\r\n        {\r\n          [...props.posts]\r\n            .reverse()\r\n            .map(p => (\r\n            <Post\r\n              key={p.id}\r\n              message={p.message}\r\n              likesCount={p.likesCount}\r\n              profile={props.profile}\r\n            />))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n})","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPosts} from './MyPosts/MyPosts';\r\nimport {ProfilePageType} from '../../redux/profile-reducer';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {ThunkType} from '../../redux/redux-store';\r\n\r\n\r\ntype ProfilePropsType = ProfilePageType & {\r\n  addPost: (postText: string) => void\r\n  changeStatus: (status: string) => ThunkType\r\n}\r\n\r\n\r\nexport function Profile(props: ProfilePropsType) {\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        changeStatus={props.changeStatus}\r\n      />\r\n      <MyPosts\r\n        profile={props.profile}\r\n        posts={props.posts}\r\n        addPost={props.addPost}\r\n      />\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Profile} from './Profile';\r\nimport {addPost, ProfilePageType, getProfile, getStatus, changeStatus} from '../../redux/profile-reducer';\r\nimport {AppStateType, ThunkType} from '../../redux/redux-store';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {WithAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\ntype MapStatePropsType = ProfilePageType & {\r\n  id: number | null\r\n  isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n  addPost: () => void\r\n  getProfile: (userId: string) => void\r\n  getStatus: (userId: string) => void\r\n  changeStatus: (status: string) => ThunkType\r\n}\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\ntype ProfilePropsType = MapStatePropsType &\r\n  MapDispatchPropsType &\r\n  RouteComponentProps<PathParamsType>\r\n\r\n\r\nclass ProfileAPIContainer extends React.Component<ProfilePropsType> {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n\r\n    if (!userId && this.props.id) {\r\n      userId = this.props.id.toString()\r\n    }\r\n\r\n    this.props.getProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}/>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n  posts: state.profilePage.posts,\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  id: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const ProfileContainer = compose<React.ComponentType>(\r\n  WithAuthRedirect,\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    addPost,\r\n    getProfile,\r\n    getStatus,\r\n    changeStatus\r\n  })\r\n)(ProfileAPIContainer)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__Hoa5K\",\"error\":\"FormControls_error__SBDrb\"};","import React from 'react';\r\nimport s from './FormControls.module.css'\r\nimport {Field} from 'redux-form';\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}: any) => {\r\n  const hasError = touched && error\r\n\r\n  return (\r\n    <div className={`${s.formControl} ${hasError && s.error}`}>\r\n      {children}\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (type: string, placeholder: string, component: any, name: string, validators: Array<any>, props: {}, text: string) => {\r\n  return <div><Field\r\n    type={type}\r\n    placeholder={placeholder}\r\n    component={component}\r\n    name={name}\r\n    validate={validators}\r\n    {...props}\r\n  /> {text}</div>\r\n}","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\r\nimport s from './MessageForm.module.css';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, minLength} from '../../../utils/validators';\r\nimport {Textarea} from '../FormControls/FormControls';\r\n\r\n\r\nexport type MessageDataType = {\r\n  message: string\r\n}\r\n\r\n\r\nconst maxLength140 = maxLengthCreator(140)\r\n\r\n\r\nfunction MessageForm(props: InjectedFormProps<MessageDataType>) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.messageForm__textarea}>\r\n        <Field\r\n          type='message'\r\n          placeholder={'your message...'}\r\n          component={Textarea}\r\n          name={'message'}\r\n          validate={[minLength, maxLength140]}\r\n        />\r\n      </div>\r\n      <div className={s.messageForm__button}>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport const MessageReduxForm = reduxForm<MessageDataType>({form: 'message'})(MessageForm)","import React, {ComponentType} from 'react';\r\nimport {AppStateType} from '../redux/redux-store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n  const RedirectComponent = (props: MapStatePropsType) => {\r\n    let {isAuth, ...restProps} = props\r\n\r\n    if (!isAuth) {\r\n      return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <Component {...restProps as T}/>\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent)\r\n}","export const required = (value: string) => {\r\n  return value ? undefined : 'Field is required!'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n  return value.length <= maxLength ? undefined : `Max length of message is ${maxLength} symbols!`\r\n}\r\n\r\nexport const minLength = (value: string) => {\r\n  return value ? undefined : 'Enter your message!'\r\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ProfileStatus","props","useState","editMode","setEditMode","status","changeStatus","useEffect","className","s","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onStatusChange","onBlur","ProfileInfo","src","profile","photos","small","require","alt","Post","message","likesCount","MyPosts","React","onSubmit","formData","addPost","posts","reverse","map","p","id","Profile","Preloader","ProfileAPIContainer","userId","this","match","params","toString","getProfile","getStatus","ProfileContainer","compose","WithAuthRedirect","withRouter","connect","state","profilePage","auth","isAuth","FormControl","input","meta","touched","error","children","hasError","Textarea","restProps","Input","maxLength140","maxLengthCreator","MessageReduxForm","reduxForm","form","handleSubmit","Field","type","placeholder","component","name","validate","minLength","mapStateToProps","Component","to","required","undefined","maxLength","length","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}