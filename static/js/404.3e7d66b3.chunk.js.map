{"version":3,"file":"static/js/404.3e7d66b3.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://samurai-way/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","webpack://samurai-way/./src/components/common/FormControls/FormControls.module.css?7a3d","components/common/FormControls/FormControls.tsx","components/common/MessageForm/MessageForm.module.css","components/common/MessageForm/MessageForm.tsx","hoc/withAuthRedirect.tsx","utils/validators/index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__REjYx\",\"dialogs__items\":\"Dialogs_dialogs__items__X2L6h\",\"dialogs__chats\":\"Dialogs_dialogs__chats__j-yR-\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__E1rex\",\"active\":\"Dialog_active__dJSxg\"};","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogPropsType = {\r\n  id: string,\r\n  name: string\r\n}\r\n\r\nexport function Dialog(props: DialogPropsType) {\r\n  return (\r\n    <div className={`${s.dialog} ${s.active}`}>\r\n      <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\ntype MessagePropsType = {\r\n  id: string,\r\n  message: string\r\n}\r\n\r\nexport function Message(props: MessagePropsType) {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  );\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addMessage, DialogsPageType} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {WithAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\ntype MapStatePropsType = DialogsPageType\r\ntype MapDispatchPropsType = {\r\n  addMessage: (message: string) => void\r\n}\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages\r\n  }\r\n}\r\n\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(\r\n  WithAuthRedirect,\r\n  connect(mapStateToProps, {\r\n    addMessage\r\n  })\r\n)(Dialogs)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {Dialog} from './Dialog/Dialog';\r\nimport {Message} from './Message/Message';\r\nimport {MessageDataType, MessageReduxForm} from '../common/MessageForm/MessageForm';\r\nimport {DialogsPropsType} from './DialogsContainer';\r\n\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n  const addMessage = (formData: MessageDataType) => {\r\n    props.addMessage(formData.message)\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs__items}>\r\n        {\r\n          props.dialogs.map(d => <Dialog key={d.id} id={d.id} name={d.name}/>)\r\n        }\r\n      </div>\r\n      <div className={s.dialogs__chats}>\r\n        {\r\n          props.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>)\r\n        }\r\n        <MessageReduxForm onSubmit={addMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__Hoa5K\",\"error\":\"FormControls_error__SBDrb\"};","import React from 'react';\r\nimport s from './FormControls.module.css'\r\nimport {Field} from 'redux-form';\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}: any) => {\r\n  const hasError = touched && error\r\n\r\n  return (\r\n    <div className={`${s.formControl} ${hasError && s.error}`}>\r\n      {children}\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (type: string, placeholder: string, component: any, name: string, validators: Array<any>, props: {}, text: string) => {\r\n  return <div><Field\r\n    type={type}\r\n    placeholder={placeholder}\r\n    component={component}\r\n    name={name}\r\n    validate={validators}\r\n    {...props}\r\n  /> {text}</div>\r\n}","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\r\nimport s from './MessageForm.module.css';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, minLength} from '../../../utils/validators';\r\nimport {Textarea} from '../FormControls/FormControls';\r\n\r\n\r\nexport type MessageDataType = {\r\n  message: string\r\n}\r\n\r\n\r\nconst maxLength140 = maxLengthCreator(140)\r\n\r\n\r\nfunction MessageForm(props: InjectedFormProps<MessageDataType>) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.messageForm__textarea}>\r\n        <Field\r\n          type='message'\r\n          placeholder={'your message...'}\r\n          component={Textarea}\r\n          name={'message'}\r\n          validate={[minLength, maxLength140]}\r\n        />\r\n      </div>\r\n      <div className={s.messageForm__button}>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport const MessageReduxForm = reduxForm<MessageDataType>({form: 'message'})(MessageForm)","import React, {ComponentType} from 'react';\r\nimport {AppStateType} from '../redux/redux-store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n  const RedirectComponent = (props: MapStatePropsType) => {\r\n    let {isAuth, ...restProps} = props\r\n\r\n    if (!isAuth) {\r\n      return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <Component {...restProps as T}/>\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent)\r\n}","export const required = (value: string) => {\r\n  return value ? undefined : 'Field is required!'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n  return value.length <= maxLength ? undefined : `Max length of message is ${maxLength} symbols!`\r\n}\r\n\r\nexport const minLength = (value: string) => {\r\n  return value ? undefined : 'Enter your message!'\r\n}"],"names":["Dialog","props","className","s","to","id","activeClassName","name","Message","message","DialogsContainer","compose","WithAuthRedirect","connect","state","dialogs","dialogsPage","messages","addMessage","map","d","m","onSubmit","formData","FormControl","input","meta","touched","error","children","hasError","Textarea","restProps","Input","maxLength140","maxLengthCreator","MessageReduxForm","reduxForm","form","handleSubmit","Field","type","placeholder","component","validate","minLength","mapStateToProps","isAuth","auth","Component","required","value","undefined","maxLength","length"],"sourceRoot":""}